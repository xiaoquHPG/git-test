git的工作机制是  先在 工作区  添加到  暂存区 然后提交给 本地库              先写代码 然后 临时存储到 暂存区 然后提交给 本地库

代码托管中心 基于 服务器的远程库也叫远程库              我们可以从本地库提交到 远程库

这里我们的代码托管中心分为两种 一个是 局域网 如 GitLab  一个是 互联网  Github 外网   Gitee码云 国内


这里我们在 git bash 注册一个签名  这个签名是用来区分 不同操作者  提交的历史版本的     跟github也不牵连


这里我们去一个目录下 右键打开 git  bash  初始化一下 git init 就创建好了  在上面勾选好 显示隐藏文件 就可以看见.git文件了 不能修改 如果修改 就会导致不能使用


查看当前的状态是 git status    编文件是 vim xxxx    提交大 暂存区是 git add    删除 暂存区是 git rm --cached xxx
ctrl l 清理 界面

创建和修改文件都是 vim    需要推出加 保存  冒号+wq 就可以了 保存和修改

git提交 git commit -m "first commit" xxx.txt  就可以了

版本的穿梭是这样的    首先去 git reflog 查看 历史和当前的 版本  查看 指针master 指向的 who    然后我们去使用
git reset --hard xxxx  -》 版本号 就可以了 原理是 head 指向master  master指向版本号    只需要 去 修改master 的指针指向就可以了

git 分支    我们可以同时进行 多个功能的开发 并且互不影响 提高开发效率 ，  这个原理是这样的 我们 当前 游戏版本号是这样的 ，从他的多个功能方面的考虑去添加
分支版本  然后去开发他 如果 感觉可以稳定了 正式提交 升级游戏版本 不会对其他人有冲突    如果分支开发失败 ，只需要删除 掉 返回到之前的版本就可以了。

如何去创建分支呢  用 git branch -v 查看 分支的版本有那些          git branch hot-fix  创建了一个 热分支 然后我们去修改文件 后
感觉 这个版本 可以发布了 就 直接 git commit -m “hot-fix first commit” xxx.txt 就可以了
git branch 去创建分支    git checkout 切换分支   git branch -v 查看分支

git 合并分支 我们在当前 版本下 使用 git merge xxxx 就合并了一个分支
产生冲突的原因是这样的
在 master 下产生一个新的分支 b  然后对文件进行了修改 并且在新的分支b 进行提交
checkout 切换会 master  对文件进行修改  然后进行保存
这样 我们去合并这两个 分支的时候会产生冲突       出现这种情况的时候 我们就需要 合并分支后 提交去解决冲突   先 git status 查看冲突的文件是那个
然后 git add 冲突文件 告诉 git我们已经解决了冲突文件  然后进行提交就可以了
            上述是理论来些实战性的
            我们在 即将要合并的两个分支都进行了修改然后 合并后   会报冲突我只需要 vim 修改文件内容 去掉 冲突的划分  把我们想保留的东西保留下来就可以了
            然后 git add xxxxx   git commit 提交就可以了
